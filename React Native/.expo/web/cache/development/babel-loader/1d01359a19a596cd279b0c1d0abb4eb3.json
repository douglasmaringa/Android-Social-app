{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DOUGLAS\\\\Desktop\\\\ReactNative\\\\letsgo\\\\lets-go\\\\App.js\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport CategoriesScreen from \"./screens/CategoryScreen\";\nimport SingleScreen from \"./screens/SingleScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport Search from \"./screens/Search\";\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nfunction HomeStack() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"single\",\n    component: HomeScreen,\n    options: {\n      title: 'Fulcrumy Store',\n      headerStyle: {\n        backgroundColor: '#FF8080'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        color: '#FFFFFF'\n      },\n      headerTitleAlign: 'center',\n      cardStyle: {\n        backgroundColor: 'white'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"single\",\n    component: SingleScreen,\n    options: {\n      title: 'Details',\n      headerStyle: {\n        backgroundColor: '#FF8080'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        color: '#FFFFFF'\n      },\n      headerTitleAlign: 'center',\n      cardStyle: {\n        backgroundColor: 'white'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"search\",\n    component: Search,\n    initialParams: {\n      searched: \"hello\"\n    },\n    options: {\n      title: 'Results',\n      headerStyle: {\n        backgroundColor: '#FF8080'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        color: '#FFFFFF'\n      },\n      headerTitleAlign: 'center',\n      cardStyle: {\n        backgroundColor: 'white'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction CategoryStack() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Category\",\n    component: CategoriesScreen,\n    options: {\n      title: 'Categories',\n      headerStyle: {\n        backgroundColor: '#FF8080'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        color: '#FFFFFF'\n      },\n      headerTitleAlign: 'center',\n      cardStyle: {\n        backgroundColor: 'white'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction CartStack() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Cart\",\n    component: CartScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction MyTabs() {\n  var _this = this;\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    tabBarOptions: {\n      activeTintColor: '#FF8080',\n      inactiveTintColor: 'black',\n      style: {\n        backgroundColor: 'white',\n        paddingBottom: 3\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeStack,\n    options: {\n      tabBarLabel: 'Home',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size,\n            activeColor = _ref.activeColor;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"home\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Categories\",\n    component: CategoryStack,\n    options: {\n      tabBarLabel: 'Categories',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"gift\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 8\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Cart\",\n    component: CartStack,\n    options: {\n      tabBarLabel: 'Cart',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color,\n            size = _ref3.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"cart\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, React.createElement(StateProvider, {\n    initialState: initialState,\n    reducer: reducer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 8\n    }\n  }, React.createElement(MyTabs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/DOUGLAS/Desktop/ReactNative/letsgo/lets-go/App.js"],"names":["React","NavigationContainer","createBottomTabNavigator","createStackNavigator","MaterialCommunityIcons","HomeScreen","CategoriesScreen","SingleScreen","CartScreen","Search","reducer","initialState","StateProvider","Tab","Stack","HomeStack","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","color","headerTitleAlign","cardStyle","searched","CategoryStack","CartStack","MyTabs","activeTintColor","inactiveTintColor","style","paddingBottom","tabBarLabel","tabBarIcon","size","activeColor","App"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAAQC,oBAAR,QAAmC,yBAAnC;AACA,OAAOC,sBAAP;AACA,OAAOC,UAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,YAAP;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP,IAAkBC,YAAlB;AACA,SAASC,aAAT;AAGA,IAAMC,GAAG,GAAGX,wBAAwB,EAApC;AACA,IAAMY,KAAK,GAAGX,oBAAoB,EAAlC;;AAGA,SAASY,SAAT,GAAqB;AAEnB,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,SAAS,EAAEV,UAAvC;AAAmD,IAAA,OAAO,EAAE;AACtDW,MAAAA,KAAK,EAAE,gBAD+C;AAEtDC,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAFyC;AAKtDC,MAAAA,eAAe,EAAE,MALqC;AAMtDC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE,MADI;AAEhBC,QAAAA,KAAK,EAAC;AAFU,OANoC;AAUtDC,MAAAA,gBAAgB,EAAE,QAVoC;AAWtDC,MAAAA,SAAS,EAAE;AACfN,QAAAA,eAAe,EAAE;AADF;AAX2C,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAiBA,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,SAAS,EAAEX,YAAvC;AAAqD,IAAA,OAAO,EAAE;AACxDS,MAAAA,KAAK,EAAE,SADiD;AAExDC,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAF2C;AAKxDC,MAAAA,eAAe,EAAE,MALuC;AAMxDC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE,MADI;AAEhBC,QAAAA,KAAK,EAAC;AAFU,OANsC;AAUxDC,MAAAA,gBAAgB,EAAE,QAVsC;AAWxDC,MAAAA,SAAS,EAAE;AACfN,QAAAA,eAAe,EAAE;AADF;AAX6C,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBA,EAgCI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,SAAS,EAAET,MAAvC;AAA8C,IAAA,aAAa,EAAE;AAACgB,MAAAA,QAAQ,EAAC;AAAV,KAA7D;AAAiF,IAAA,OAAO,EAAE;AACxFT,MAAAA,KAAK,EAAE,SADiF;AAExFC,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAF2E;AAKxFC,MAAAA,eAAe,EAAE,MALuE;AAMxFC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE,MADI;AAEhBC,QAAAA,KAAK,EAAC;AAFU,OANsE;AAUxFC,MAAAA,gBAAgB,EAAE,QAVsE;AAWxFC,MAAAA,SAAS,EAAE;AACfN,QAAAA,eAAe,EAAE;AADF;AAX6E,KAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,CADF;AAmDD;;AACD,SAASQ,aAAT,GAAyB;AACvB,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEpB,gBAAzC;AAA2D,IAAA,OAAO,EAAE;AAC9DU,MAAAA,KAAK,EAAE,YADuD;AAE9DC,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAFiD;AAK9DC,MAAAA,eAAe,EAAE,MAL6C;AAM9DC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE,MADI;AAEhBC,QAAAA,KAAK,EAAC;AAFU,OAN4C;AAU9DC,MAAAA,gBAAgB,EAAE,QAV4C;AAW9DC,MAAAA,SAAS,EAAE;AACfN,QAAAA,eAAe,EAAE;AADF;AAXmD,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAmBD;;AACD,SAASS,SAAT,GAAqB;AACnB,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEnB,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAKD;;AAID,SAASoB,MAAT,GAAkB;AAAA;;AAChB,SACE,oBAAC,GAAD,CAAK,SAAL;AAAe,IAAA,gBAAgB,EAAC,MAAhC;AACA,IAAA,aAAa,EAAE;AACbC,MAAAA,eAAe,EAAE,SADJ;AAEbC,MAAAA,iBAAiB,EAAE,OAFN;AAGZC,MAAAA,KAAK,EAAE;AACEb,QAAAA,eAAe,EAAE,OADnB;AAEEc,QAAAA,aAAa,EAAE;AAFjB;AAHK,KADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAEjB,SAAnC;AAEC,IAAA,OAAO,EAAE;AACRkB,MAAAA,WAAW,EAAE,MADL;AAERC,MAAAA,UAAU,EAAE;AAAA,YAAGZ,KAAH,QAAGA,KAAH;AAAA,YAAUa,IAAV,QAAUA,IAAV;AAAA,YAAeC,WAAf,QAAeA,WAAf;AAAA,eACV,oBAAC,sBAAD;AAAwB,UAAA,IAAI,EAAC,MAA7B;AAAoC,UAAA,KAAK,EAAEd,KAA3C;AAAmD,UAAA,IAAI,EAAEa,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;AAAA;AAFJ,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAmBG,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,YAAjB;AAA8B,IAAA,SAAS,EAAET,aAAzC;AACD,IAAA,OAAO,EAAE;AACPO,MAAAA,WAAW,EAAE,YADN;AAEPC,MAAAA,UAAU,EAAE;AAAA,YAAGZ,KAAH,SAAGA,KAAH;AAAA,YAAUa,IAAV,SAAUA,IAAV;AAAA,eACV,oBAAC,sBAAD;AAAwB,UAAA,IAAI,EAAC,MAA7B;AAAoC,UAAA,KAAK,EAAEb,KAA3C;AAAkD,UAAA,IAAI,EAAEa,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;AAAA;AAFL,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBH,EA2BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAER,SAAnC;AACA,IAAA,OAAO,EAAE;AACPM,MAAAA,WAAW,EAAE,MADN;AAEPC,MAAAA,UAAU,EAAE;AAAA,YAAGZ,KAAH,SAAGA,KAAH;AAAA,YAAUa,IAAV,SAAUA,IAAV;AAAA,eACV,oBAAC,sBAAD;AAAwB,UAAA,IAAI,EAAC,MAA7B;AAAoC,UAAA,KAAK,EAAEb,KAA3C;AAAkD,UAAA,IAAI,EAAEa,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;AAAA;AAFL,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,CADF;AAqCD;;AAID,eAAe,SAASE,GAAT,GAAe;AAC5B,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,aAAD;AAAe,IAAA,YAAY,EAAE1B,YAA7B;AAA2C,IAAA,OAAO,EAAED,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADH,CADF;AAOD","sourcesContent":["import * as React from 'react';\nimport { Text, View,StatusBar } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport HomeScreen from \"./screens/HomeScreen\"\nimport CategoriesScreen from \"./screens/CategoryScreen\"\nimport SingleScreen from \"./screens/SingleScreen\"\nimport CartScreen from \"./screens/CartScreen\"\nimport Search from \"./screens/Search\"\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\n\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\n//you first create stacks and put the screens for each stack. \nfunction HomeStack (){\n//if you wanna add more routes to home page just add more screens to the home stack.\n  return(\n    <Stack.Navigator initialRouteName=\"Home\" >\n      {/*Initial is so that the all screens arent displayed at once it displays a single screen*/}\n    <Stack.Screen name=\"single\" component={HomeScreen} options={{\n          title: 'Fulcrumy Store',\n          headerStyle: {\n            backgroundColor: '#FF8080',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n            color:'#FFFFFF',\n          },\n          headerTitleAlign: 'center',\n          cardStyle: {\n      backgroundColor: 'white'\n    }\n        }}/>\n    <Stack.Screen name=\"single\" component={SingleScreen} options={{\n          title: 'Details',\n          headerStyle: {\n            backgroundColor: '#FF8080',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n            color:'#FFFFFF',\n          },\n          headerTitleAlign: 'center',\n          cardStyle: {\n      backgroundColor: 'white'\n    }\n        }}/>\n        <Stack.Screen name=\"search\" component={Search}initialParams={{searched:\"hello\"}} options={{\n          title: 'Results',\n          headerStyle: {\n            backgroundColor: '#FF8080',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n            color:'#FFFFFF',\n          },\n          headerTitleAlign: 'center',\n          cardStyle: {\n      backgroundColor: 'white'\n    }\n        }}/>\n    </Stack.Navigator>\n    \n  )\n}\nfunction CategoryStack (){\n  return(\n    <Stack.Navigator initialRouteName=\"Category\">\n    <Stack.Screen name=\"Category\" component={CategoriesScreen} options={{\n          title: 'Categories',\n          headerStyle: {\n            backgroundColor: '#FF8080',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n            color:'#FFFFFF',\n          },\n          headerTitleAlign: 'center',\n          cardStyle: {\n      backgroundColor: 'white'\n    }\n        }}/>\n    </Stack.Navigator>\n  )\n}\nfunction CartStack (){\n  return(\n    <Stack.Navigator initialRouteName=\"Cart\">\n    <Stack.Screen name=\"Cart\" component={CartScreen}/>\n    </Stack.Navigator>\n  )\n}\n\n//My tabs is the bottom nav bar it will hold all the stacks \n//The home tab will hold the homestack so if youre in the categories tab you can access the home stack.\nfunction MyTabs() {\n  return (\n    <Tab.Navigator initialRouteName=\"Home\"\n    tabBarOptions={{\n      activeTintColor: '#FF8080',\n      inactiveTintColor: 'black',\n       style: {\n                backgroundColor: 'white',\n                paddingBottom: 3\n          }\n   }}>\n      <Tab.Screen name=\"Home\" component={HomeStack} \n      \n       options={{\n        tabBarLabel: 'Home',\n        tabBarIcon: ({ color, size,activeColor }) => (\n          <MaterialCommunityIcons name=\"home\" color={color}  size={size}  />\n        ),\n        \n      }}/>\n      \n       <Tab.Screen name=\"Categories\" component={CategoryStack} \n      options={{\n        tabBarLabel: 'Categories',\n        tabBarIcon: ({ color, size }) => (\n          <MaterialCommunityIcons name=\"gift\" color={color} size={size} />\n        ),\n      }}/>\n       \n      <Tab.Screen name=\"Cart\" component={CartStack} \n      options={{\n        tabBarLabel: 'Cart',\n        tabBarIcon: ({ color, size }) => (\n          <MaterialCommunityIcons name=\"cart\" color={color} size={size} />\n        ),\n      }}/>\n    </Tab.Navigator>\n  );\n}\n\n//here we will now export our nav bar which has a stack inside it.\n//sometimes it will also has a drawer.\nexport default function App() {\n  return (\n    <NavigationContainer>\n       <StateProvider initialState={initialState} reducer={reducer}>\n      <MyTabs />\n      </StateProvider>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}